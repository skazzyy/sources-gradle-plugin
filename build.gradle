plugins {
    id 'java-gradle-plugin'
    id 'eclipse'
    id 'jacoco'
    id 'com.gradle.plugin-publish' version "0.9.1"
}

defaultTasks 'clean', 'build', 'jacoco', 'sampleCodeCoverageReport'

repositories {
    jcenter()
}

group = 'com.github.skazzyy.gradle.plugins'
version = '1.0.0-SNAPSHOT'

task testSampleJava(type: JavaExec) {
    description 'Validates the sample.build.gradle as a JavaExec task for code coverage generation'
    classpath file('gradle/wrapper/gradle-wrapper.jar')
    main 'org.gradle.wrapper.GradleWrapperMain'
    dependsOn assemble
    args '-b'
    args 'sample.build.gradle'

    doLast {
        //this is a 'test' afterall
        ['', '-sources', '-javadoc', '-tests'].each { classifier ->
            def file = file("build/libs/sample-sources-gradle-plugin${ -> classifier }.jar")
            logger.info "Checking that $file was created and is not empty"
            assert file.exists()
            //If the jars is full, then it should be at least 1000 bytes
            assert file.length() > 1000
        }
    }
}
check.dependsOn testSampleJava

jacoco {
    applyTo testSampleJava
}

task sampleCodeCoverageReport(type:JacocoReport){
    executionData testSampleJava
    sourceSets sourceSets.main
}

pluginBundle {
    website = 'https://github.com/skazzyy/sources-gradle-plugin'
    vcsUrl = 'https://github.com/skazzyy/sources-gradle-plugin'
    description = 'Simple plugin for publishing sources and javadoc in java projects'
    tags = ['java', 'source']
    plugins {
        sourcesPlugin {
            id = 'com.github.skazzyy.sources'
            displayName = 'Java Sources Gradle Plugin'
        }
    }
}
