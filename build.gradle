//apply plugin: 'groovy'
//apply plugin: 'signing'
//apply plugin: 'jacoco'
//apply plugin: 'eclipse'
plugins {
    id 'java-gradle-plugin'
    id 'eclipse'
    id 'jacoco'
}

defaultTasks 'clean', 'build', 'jacoco', 'sampleCodeCoverageReport'

repositories {
    jcenter()
}

group = 'com.github.skazzyy.gradle.plugins'
version = '1.0.0-SNAPSHOT'

task testSampleJava(type: JavaExec) {
    description 'Validates the sample.build.gradle as a JavaExec task for code coverage generation'
    classpath file('gradle/wrapper/gradle-wrapper.jar')
    main 'org.gradle.wrapper.GradleWrapperMain'
    dependsOn assemble
    args '-b'
    args 'sample.build.gradle'

    doLast {
        //this is a 'test' afterall
        ['', '-sources', '-javadoc', '-tests'].each { classifier ->
            def file = file("build/libs/sample-sources-gradle-plugin${ -> classifier }.jar")
            logger.info "Checking that $file was created and is not empty"
            assert file.exists()
            //If the jars is full, then it should be at least 1000 bytes
            assert file.length() > 1000
        }
    }
}
check.dependsOn testSampleJava

jacoco {
    applyTo testSampleJava
}

task sampleCodeCoverageReport(type:JacocoReport){
    executionData testSampleJava
    sourceSets sourceSets.main
}

//signing {
//    required false
//    sign configurations.archives
//}
